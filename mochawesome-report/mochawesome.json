{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-20T07:25:47.022Z",
    "end": "2024-08-20T07:25:49.596Z",
    "duration": 2574,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b53817d4-731c-416a-8c71-f3af1ec45b05",
      "title": "",
      "fullFile": "D:\\Documents\\QA Engineering Digital Skola\\api_automation_digitalskola-main\\test\\reqres-api-test.js",
      "file": "\\test\\reqres-api-test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7a8d316b-a04f-4bad-91e3-9c572ec92c60",
          "title": "API Test for 'reqres.in'",
          "fullFile": "D:\\Documents\\QA Engineering Digital Skola\\api_automation_digitalskola-main\\test\\reqres-api-test.js",
          "file": "\\test\\reqres-api-test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test - GET All Object",
              "fullTitle": "API Test for 'reqres.in' Test - GET All Object",
              "timedOut": false,
              "duration": 326,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL).get(\"users?page=2\");\nconst schemaPath = \"resources/get-object-schema.json\";\nconst jsonSchema = JSON.parse(fs.readFileSync(schemaPath, \"utf8\"));\nconsole.log(response.body);\nassert.jsonSchema(response.body, jsonSchema);",
              "err": {},
              "uuid": "5811ac77-3470-4236-9f3d-3753900eea86",
              "parentUUID": "7a8d316b-a04f-4bad-91e3-9c572ec92c60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test - POST Store Object",
              "fullTitle": "API Test for 'reqres.in' Test - POST Store Object",
              "timedOut": false,
              "duration": 808,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  name: \"morpheus\",\n  job: \"leader\",\n};\nconst response = await request(BASE_URL).post(\"users\").send(body);\nconst schemaPath = \"resources/post-object-schema.json\";\nconst jsonSchema = JSON.parse(fs.readFileSync(schemaPath, \"utf8\"));\nconsole.log(response.statusCode);\nconsole.log(response.body);\nassert.jsonSchema(response.body, jsonSchema);",
              "err": {},
              "uuid": "7d96b901-7702-4b5c-b719-081284ec0e01",
              "parentUUID": "7a8d316b-a04f-4bad-91e3-9c572ec92c60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test - PUT Object",
              "fullTitle": "API Test for 'reqres.in' Test - PUT Object",
              "timedOut": false,
              "duration": 712,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const body = {\n  name: \"morpheus\",\n  job: \"zion resident\",\n};\nconst response = await request(BASE_URL).post(\"users/2\").send(body);\nconst schemaPath = \"resources/put-object-schema.json\";\nconst jsonSchema = JSON.parse(fs.readFileSync(schemaPath, \"utf8\"));\nconsole.log(response.statusCode);\nconsole.log(response.body);\nassert.jsonSchema(response.body, jsonSchema);",
              "err": {},
              "uuid": "c06e5202-44f0-48dd-88d4-62a6ce5a843f",
              "parentUUID": "7a8d316b-a04f-4bad-91e3-9c572ec92c60",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test - DELETE Object",
              "fullTitle": "API Test for 'reqres.in' Test - DELETE Object",
              "timedOut": false,
              "duration": 711,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request(BASE_URL).delete(\"users/2\");\nconst schemaPath = \"resources/delete-object-schema.json\";\nconst jsonSchema = JSON.parse(fs.readFileSync(schemaPath, \"utf8\"));\nconsole.log(response.statusCode);\nconsole.log(response.body);\nassert.jsonSchema(response.body, jsonSchema);\nassert.equal(response.statusCode, 204);",
              "err": {},
              "uuid": "f299856e-ea5b-41b5-9ca8-dae8719da2d6",
              "parentUUID": "7a8d316b-a04f-4bad-91e3-9c572ec92c60",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5811ac77-3470-4236-9f3d-3753900eea86",
            "7d96b901-7702-4b5c-b719-081284ec0e01",
            "c06e5202-44f0-48dd-88d4-62a6ce5a843f",
            "f299856e-ea5b-41b5-9ca8-dae8719da2d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2557,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}